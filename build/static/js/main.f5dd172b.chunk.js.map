{"version":3,"sources":["hooks/width.js","components/footer/footer.js","components/header/header.js","pages/about.js","pages/contact.js","components/buttons/button.js","components/cards/card.js","data/cards.js","pages/home.js","components/App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","width","window","innerWidth","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","links","Footer","showLinks","setShowLinks","ShowLinks","map","link","index","key","icon","faBars","onClick","className","Header","to","About","Contact","btnClick","alert","Button","props","title","Card","copy","button","class","cards","Home","listItems","card","App","exact","path","Boolean","location","hostname","match","httpLink","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5dd172b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width } = window;\n  return {\n    width\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport useWindowDimensions from '../../hooks/width'\n\nconst links = ['link 1', 'link 2', 'link 3'];\n\nfunction Footer() {\n\n\tconst [showLinks, setShowLinks] = useState(false)\n\n\tconst ShowLinks = () => {\n\t\t\n\t\tconst { width } = useWindowDimensions();\n\t\tif (width > 720) {\n\t\t\treturn (\n\t\t\t\tlinks.map(\n\t\t\t\t\t(link, index) => \n\t\t\t\t\t\t<li key={index}>{link}</li>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\treturn <FontAwesomeIcon\n\t\t\t\t\ticon={faBars}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => setShowLinks(\n\t\t\t\t\t\t\t!showLinks\n\t\t\t\t\t\t)} \n\t\t\t\t/>\n\t}\n\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<div className=\"logo\">\n\t\t\t\tKeith Raucy\n\t\t\t</div>\n\t\t\t<div className=\"links\">\n\t\t\t\t<ShowLinks />\n\t\t\t</div>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport useWindowDimensions from '../../hooks/width'\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nconst links = ['/', 'about', 'contact'];\n\nfunction Header() {\n\n\tconst [showLinks, setShowLinks] = useState(false)\n\n\tconst ShowLinks = () => {\n\t\t\n\t\tconst { width } = useWindowDimensions();\n\t\tif (width > 720) {\n\t\t\treturn (\n\t\t\t\tlinks.map(\n\t\t\t\t\t(link, index) => \n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t<Link to={`${link}`}>\t\t\n\t\t\t\t\t\t\t\t{link}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\treturn <FontAwesomeIcon\n\t\t\t\t\ticon={faBars}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => setShowLinks(\n\t\t\t\t\t\t\t!showLinks\n\t\t\t\t\t\t)} \n\t\t\t\t/>\n\t}\n\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<div className=\"logo\">\n\t\t\t\tKeith Raucy\n\t\t\t</div>\n\t\t\t<div className=\"links\">\n\t\t\t\t<Router>\n\t\t\t\t\t<ShowLinks />\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n\treturn (\n\t  <div>\n\t\t<h2>About</h2>\n\t  </div>\n\t);\n  }\n\nexport default About;","import React from \"react\";\n\nfunction Contact() {\n\treturn (\n\t  <div>\n\t\t<h2>Contact</h2>\n\t  </div>\n\t);\n  }\n\nexport default Contact;","import React from 'react';\n\nconst btnClick = () => {\n\talert('Button clicked!');\n}\n\n\nfunction Button(props) {\n\treturn(\n\t\t<button \n\t\t\tclassName={\n\t\t\t\tprops.className\n\t\t\t}\n\t\t\tonClick={\n\t\t\t\tbtnClick\n\t\t\t}\n\t\t>\n\t\t\t{props.title}\n\t\t</button>\n\t)\n}\n\nexport default Button;","import React from 'react';\nimport Button from '../buttons/button';\n\nfunction Card(props) {\n\n  return (\n    <div className=\"card-container flex\">\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-header\">\n\t\t\t\t<h2>\n\t\t\t\t\t{props.title}\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<p>\n\t\t\t\t\t{props.copy}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-footer\">\n\t\t\t\t<Button className={\n\t\t\t\t\t\tprops.button.class\n\t\t\t\t\t}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tprops.button.title\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default Card;\n","const cards = [\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t},\n\t{\n\t\tbutton: {\n\t\t\tclass: 'button',\n\t\t\ttitle: 'Click'\n\t\t},\n\t\tcopy: 'This copy is for card number',\n\t\ttitle: 'Card number'\n\t}\n]\n\nexport default cards;","import React from \"react\";\nimport Card from '../components/cards/card';\nimport cards from '../data/cards';\n// import {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\n\nfunction Home() {\n\tconst listItems = cards.map((card, index) => \n\t\t<Card \n\t\t\tbutton={card.button}\n\t\t\tcopy={`${card.copy} ${index + 1}`}\n\t\t\tkey={index}\n\t\t\ttitle={`${card.title} ${index + 1}`}\n\t\t/>\n\t);\n\treturn (\n\t\t<div className=\"row\">\n\t\t{\n\t\t\tlistItems\n\t\t}\n\t</div>\n\t);\n  }\n\nexport default Home;","import React from 'react';\nimport Footer from './footer/footer';\nimport Header from './header/header';\nimport About from '../pages/about';\nimport Contact from '../pages/contact';\nimport Home from '../pages/home';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\t// Link,\n\t// useRouteMatch\n  } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n\t<Router>\n\t\t<div className=\"App\">\n\t\t\t<Header className=\"App-header\" />\n\t\t\t<div className=\"body\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/contact\">\n\t\t\t\t\t\t<Contact />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t\t<Footer className=\"App-footer\" />\n\t\t</div>\n\t</Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}